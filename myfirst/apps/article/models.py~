from django.db import models

class Article(models.Model):
    article_title = models.CharField('название статьи', max_length = 200)
    article_text = models.TextField('текст статьи')
    pub_date = models.DateTimeField('дата публикации')
    
class Comment(models.Model):
    article = models.ForeignKey(Article, on_delete = models.CASCADE)
    author_name = models.CharField('имя автора', max_length = 50)
    comment_text = models.CharField('текст комментария', max_length = 200)
    comment_int = SplitAndGive(author_name)[0]
    comment_float = SplitAndGive(author_name)[1]
    comment_string = SplitAndGive(author_name)[2]

def SplitAndGive(string):
	Array = string.split(',')
	INT = []
	FLOAT = []
	STRING = []
	ARRAY = []
	string_int = ''
	string_float = ''
	string_string = ''

	for i in range(len(Array)):
		ARRAY.append(Check(Array[i]))

	for i in range(len(ARRAY)):
		if type(ARRAY[i]) is str:
			STRING.append(ARRAY[i])
		if type(ARRAY[i]) is int:
			INT.append(ARRAY[i])
		if type(ARRAY[i]) is float:
			FLOAT.append(ARRAY[i])

	for i in range(len(INT)):
		string_int = string_int + str(INT[i]) + '; '

	for i in range(len(FLOAT)):
		string_float = string_float + str(FLOAT[i]) + '; '

	for i in range(len(STRING)):
		string_string = string_string + str(STRING[i]) + '; '

	return str(string_int), str(string_float), str(string_string)

	#return str(INT), str(FLOAT), str(STRING)

def Check(s):
	try:
		return int(s.strip())
	except ValueError:
		try:
			return float(s.strip())
		except ValueError:
			return str(s.strip())
